-- Copyright (C) 2020  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and any partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details, at
-- https://fpgasoftware.intel.com/eula.

-- PROGRAM		"Quartus Prime"
-- VERSION		"Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition"
-- CREATED		"Sun Nov 13 10:35:30 2022"

LIBRARY ieee;
USE ieee.std_logic_1164.all; 

LIBRARY work;

ENTITY partial_encoder IS 
	PORT
	(
		m_2 :  IN  STD_LOGIC;
		m_1 :  IN  STD_LOGIC;
		m_3 :  IN  STD_LOGIC;
		z0 :  OUT  STD_LOGIC;
		z1 :  OUT  STD_LOGIC;
		z2 :  OUT  STD_LOGIC;
		z3 :  OUT  STD_LOGIC;
		z4 :  OUT  STD_LOGIC;
		z5 :  OUT  STD_LOGIC;
		z6 :  OUT  STD_LOGIC;
		z7 :  OUT  STD_LOGIC
	);
END partial_encoder;

ARCHITECTURE bdf_type OF partial_encoder IS 

SIGNAL	SYNTHESIZED_WIRE_7 :  STD_LOGIC;
SIGNAL	SYNTHESIZED_WIRE_2 :  STD_LOGIC;
SIGNAL	SYNTHESIZED_WIRE_8 :  STD_LOGIC;
SIGNAL	SYNTHESIZED_WIRE_6 :  STD_LOGIC;


BEGIN 
z0 <= '0';
z2 <= SYNTHESIZED_WIRE_2;
z4 <= SYNTHESIZED_WIRE_8;
z6 <= SYNTHESIZED_WIRE_6;
SYNTHESIZED_WIRE_7 <= '0';




z1 <= SYNTHESIZED_WIRE_7 XOR m_1;


SYNTHESIZED_WIRE_2 <= SYNTHESIZED_WIRE_7 XOR m_2;


z3 <= SYNTHESIZED_WIRE_2 XOR m_1;


SYNTHESIZED_WIRE_8 <= SYNTHESIZED_WIRE_7 XOR m_3;


z5 <= SYNTHESIZED_WIRE_8 XOR m_1;


SYNTHESIZED_WIRE_6 <= SYNTHESIZED_WIRE_8 XOR m_2;


z7 <= SYNTHESIZED_WIRE_6 XOR m_1;


END bdf_type;